!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?exports.chordbox=t():e.chordbox=t()}(global,(()=>(()=>{"use strict";var e={d:(t,r)=>{for(var o in r)e.o(r,o)&&!e.o(t,o)&&Object.defineProperty(t,o,{enumerable:!0,get:r[o]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t)},t={};e.d(t,{default:()=>b});const r=require("path"),o=require("@svgdotjs/svg.js"),n=require("svgdom");function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,o)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){d(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function a(e,t){for(var r=0;r<t.length;r++){var o=t[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}function d(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}n.config.setFontDir((0,r.resolve)(__dirname,"assets/fonts")).setFontFamilyMappings({"sans-serif":"nahnah.ttf"});var f=(0,n.createSVGWindow)(),c=f.document;(0,o.registerWindow)(f,c);var h={title:"Chord",frets:3,baseFret:1,dots:[],dotText:function(){return""},tunings:["E","A","D","G","B","E"],guages:[46,36,25,17,13,10]},u="Arial",l=285,g=350,p=50,x=50,v=50,y=10;const b={ChordBox:function(){function e(t){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),d(this,"chordBoxOptions",h),this.renderer=(0,o.SVG)(),this.chordBoxOptions=s(s({},this.chordBoxOptions),t),this.validateChordBoxOptions(),this}var t,i;return t=e,i=[{key:"validateChordBoxOptions",value:function(){if(this.chordBoxOptions.frets<1||this.chordBoxOptions.frets>6)throw new Error("frets must be between 1 and 6");if(this.chordBoxOptions.baseFret<1||this.chordBoxOptions.baseFret>24)throw new Error("baseFret must be between 1 and 24");if(6!==this.chordBoxOptions.tunings.length)throw new Error("tuning must present for 6 strings only");if(6!==this.chordBoxOptions.guages.length)throw new Error("guages must present for 6 strings only")}},{key:"generateChordBoxBase",value:function(){var e=(0,o.SVG)().group(),t=(0,o.SVG)().rect(l,g).radius(5).fill("#000"),r=(0,o.SVG)().rect(275,340).fill("#fff");return e.add(t),e.add(r),t.back(),r.front(),r.move(5,5),e}},{key:"generateChordBoxTitle",value:function(){var e=(0,o.SVG)().group(),t=(0,o.SVG)().rect(275,p).fill("#000"),r=(0,o.SVG)().text(this.chordBoxOptions.title).attr({"font-size":24,"font-family":u}).fill("#fff").cx(137.5).cy(25);return e.add(t),e.add(r),t.back(),r.front(),e.move(5,5),e}},{key:"generatechordBoxFretLabels",value:function(){var e=this,t=(0,o.SVG)().group(),r=240/this.chordBoxOptions.frets,n=(0,o.SVG)().rect(x,240).fill("#fff"),i=Array.from(Array(this.chordBoxOptions.frets)).map((function(t,n){var i=(0,o.SVG)().group(),s=(0,o.SVG)().rect(x,r).fill("#fff"),a=(0,o.SVG)().text((e.chordBoxOptions.baseFret+n).toString()).attr({"font-size":16,"font-family":u}).fill("#000").cx(25).cy(r/2);return i.add(s),i.add(a),s.back(),a.front(),i.move(0,n*r),i}));return t.add(n),i.map((function(e){t.add(e)})),n.back(),t.move(5,105),t}},{key:"generatechordBoxStringLabels",value:function(){var e=this,t=(0,o.SVG)().group(),r=225/this.chordBoxOptions.tunings.length,n=(0,o.SVG)().rect(225,v).fill("#fff"),i=Array.from(Array(this.chordBoxOptions.tunings.length)).map((function(t,n){var i=(0,o.SVG)().group(),s=(0,o.SVG)().rect(r,v).fill("#fff"),a=(0,o.SVG)().text(e.chordBoxOptions.tunings[n]).attr({"font-size":16,"font-family":u}).fill("#000").cx(r/2).cy(25);return i.add(s),i.add(a),s.back(),a.front(),i.move(n*r,0),i}));return t.add(n),i.map((function(e){t.add(e)})),n.back(),t.move(55,55),t}},{key:"generateChordboxBody",value:function(){var e=(0,o.SVG)().group(),t=(0,o.SVG)().rect(225,240).fill("#fff");return e.add(t),e.move(55,105),e}},{key:"generatechordBoxNut",value:function(){var e=(0,o.SVG)().group(),t=(0,o.SVG)().rect(195,y).fill("none").radius(3);return 1===this.chordBoxOptions.baseFret&&t.fill("#000"),e.add(t),e.move(70,105),e}},{key:"generatechordBoxFrets",value:function(){var e=(0,o.SVG)().group(),t=230/this.chordBoxOptions.frets,r=(0,o.SVG)().rect(195,230).fill("#fff"),n=Array.from(Array(this.chordBoxOptions.frets)).map((function(e,r){var n=(0,o.SVG)().rect(195,3).fill("#C0C0C0");return n.move(0,r*t),n}));return e.add(r),n.map((function(t){e.add(t)})),e.back(),e.move(70,115),e}},{key:"generateChordBoxStrings",value:function(){var e=this,t=(0,o.SVG)().group(),r=225/this.chordBoxOptions.tunings.length,n=(0,o.SVG)().rect(225,230).fill("none"),i=Array.from(Array(this.chordBoxOptions.tunings.length)).map((function(t,n){var i=.125*e.chordBoxOptions.guages[n],s=(0,o.SVG)().rect(i,230).fill("#E48C5D");return s.move(n*r+r/2,0),s}));return t.add(n),i.map((function(e){t.add(e)})),t.back(),t.move(55,115),t}},{key:"generateChordBoxDots",value:function(){var e=this,t=(0,o.SVG)().group(),r=225/this.chordBoxOptions.tunings.length,n=230/this.chordBoxOptions.frets,i=this.chordBoxOptions.tunings.length,s=this.chordBoxOptions.guages,a=this.chordBoxOptions.dots,d=(0,o.SVG)().rect(225,230).fill("none"),f=Array.from(a).map((function(t){var a=(0,o.SVG)().group(),d=(0,o.SVG)().circle(30).fill("#000");d.cx((i-t.string)*r+r/2+.125*s[i-t.string]/2).cy((t.fret-1)*n+n/2),1===t.fret&&d.cy(n/2+y/(2*e.chordBoxOptions.frets));var f=(0,o.SVG)().text(e.chordBoxOptions.dotText(t)).attr({"font-size":12,"font-family":u}).fill("#fff");return f.cx((i-t.string)*r+r/2+.125*s[i-t.string]/2).cy((t.fret-1)*n+n/2),1===t.fret&&f.cy(n/2+y/(2*e.chordBoxOptions.frets)),a.add(d),a.add(f),d.back(),f.front(),a}));return t.add(d),f.map((function(e){t.add(e)})),t.back(),t.move(55,115),t}},{key:"setFontsDir",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:(0,r.resolve)(__dirname,"./assets/fonts");return n.config.setFontDir(e),this}},{key:"setDots",value:function(e){return this.chordBoxOptions.dots=e,this.render(),this}},{key:"render",value:function(){return this.renderer.clear(),this.renderer.add(this.generateChordBoxBase()),this.renderer.add(this.generateChordBoxTitle()),this.renderer.add(this.generatechordBoxFretLabels()),this.renderer.add(this.generatechordBoxStringLabels()),this.renderer.add(this.generateChordboxBody()),this.renderer.add(this.generatechordBoxNut()),this.renderer.add(this.generatechordBoxFrets()),this.renderer.add(this.generateChordBoxStrings()),this.renderer.add(this.generateChordBoxDots()),this.renderer.attr({width:l,height:g}),this}},{key:"toSVG",value:function(){return this.renderer.svg()}},{key:"toSVGBase64URI",value:function(){return"data:image/svg+xml;base64,".concat(Buffer.from(this.renderer.svg()).toString("base64"))}}],i&&a(t.prototype,i),Object.defineProperty(t,"prototype",{writable:!1}),e}()};return t.default})()));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,