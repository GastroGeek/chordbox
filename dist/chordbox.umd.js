!function(e,o){"object"==typeof exports&&"object"==typeof module?module.exports=o():"function"==typeof define&&define.amd?define([],o):"object"==typeof exports?exports.chordbox=o():e.chordbox=o()}(global,(()=>(()=>{"use strict";var e={};const o=require("@svgdotjs/svg.js");var t=(0,require("svgdom").createSVGWindow)(),r=t.document;return(0,o.registerWindow)(t,r),e.default})()));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,